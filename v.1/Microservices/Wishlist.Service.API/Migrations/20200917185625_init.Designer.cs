// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wishlist.Service.API.DBContext;

namespace Wishlist.Service.API.Migrations
{
    [DbContext(typeof(WishlistContext))]
    [Migration("20200917185625_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wishlist.Service.API.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1863048-bdad-4d01-a1ec-83b24dcb8274"),
                            Description = "There is no valid category for you, sorry.",
                            Name = "NoCategory"
                        },
                        new
                        {
                            Id = new Guid("43ff64aa-993a-41e5-89a4-a5848b67ca28"),
                            Description = "Vodka, Whisky, Wine, Beer... just stop.",
                            Name = "Alcohol"
                        },
                        new
                        {
                            Id = new Guid("4c1ae8cb-ce73-4ffd-b19c-3f95060f8bc4"),
                            Description = "Literature is important, just don't asleep.",
                            Name = "Book"
                        },
                        new
                        {
                            Id = new Guid("e9076572-d974-402d-bf92-0bce65cc0d81"),
                            Description = "Car one of the best man friend.",
                            Name = "Car"
                        },
                        new
                        {
                            Id = new Guid("3ce7c598-1d81-46b5-88a7-33dd49bb07c7"),
                            Description = "Tool, toy, sense of live.",
                            Name = "Computer"
                        },
                        new
                        {
                            Id = new Guid("07fc2b80-aa6b-489e-a376-e69e62684bba"),
                            Description = "AGD, RTV ?.",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("af8a7c1e-11ee-4c46-893f-2e69c28d1e73"),
                            Description = "Hobby is important don't forget about the most important.",
                            Name = "Motorcycle"
                        },
                        new
                        {
                            Id = new Guid("bfb24c33-82c4-4454-837b-72c0ef1da991"),
                            Description = "Health is important, take care about it.",
                            Name = "Health"
                        },
                        new
                        {
                            Id = new Guid("760408b9-1c99-4ea5-9244-a701b23dc152"),
                            Description = "Hobby category, put here everything you want.",
                            Name = "Hobby"
                        },
                        new
                        {
                            Id = new Guid("de24d5ae-6438-409d-a1b1-a65863b3d3a6"),
                            Description = "Home, sweet home.",
                            Name = "Home"
                        },
                        new
                        {
                            Id = new Guid("95fe5581-23df-4cfd-9c6a-3d87f90f7951"),
                            Description = "Listen, listen... can you hear? This silence.",
                            Name = "Music"
                        },
                        new
                        {
                            Id = new Guid("186e9926-e3e0-4164-a61c-d790efa0653c"),
                            Description = "Any other category you didn't think of.",
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("8a33313c-30a3-4e8b-8809-c2d5f10e3e3a"),
                            Description = "One of the best jobs and hobbies ever.",
                            Name = "Programming"
                        },
                        new
                        {
                            Id = new Guid("f8c726ab-e634-4409-9f8d-f3c7d6e6966d"),
                            Description = "Put here everything everything what you think makes you relaxed.",
                            Name = "Relax"
                        },
                        new
                        {
                            Id = new Guid("c952a537-2e50-4bac-af20-c9fdf3e513fe"),
                            Description = "Money, money and agian money, you need them.",
                            Name = "Savings"
                        });
                });

            modelBuilder.Entity("Wishlist.Service.API.Models.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OccasionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OccasionId");

                    b.HasIndex("StateId");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("Wishlist.Service.API.Models.Occasion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Occasions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85ccb780-81b7-4325-abf0-1f283aaa4058"),
                            Description = "There is no occasion, but don't forget about yourself.",
                            Name = "NoOccasion"
                        },
                        new
                        {
                            Id = new Guid("d4cb508d-b447-492b-b778-1ec38e64d86d"),
                            Description = "Someone celebrates birthday, don't forget about a nice present.",
                            Name = "BirthdayPresent"
                        },
                        new
                        {
                            Id = new Guid("b905f29b-1b92-4ba0-821f-c85a6cd13d67"),
                            Description = "Christmas time, there is no better time for presents.",
                            Name = "ChristmasPresent"
                        },
                        new
                        {
                            Id = new Guid("c4aea200-b799-4772-9ba1-e6187453ddb4"),
                            Description = "Need more stuf, movement is great opportunity to rid of old things.",
                            Name = "Movement"
                        },
                        new
                        {
                            Id = new Guid("5229afaa-2247-4fa7-a63e-a453d64aa9a8"),
                            Description = "Any other situation you didn't think of.",
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("Wishlist.Service.API.Models.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6418a83f-c7b3-4189-8abc-58a0b1afb1d6"),
                            Description = "I plan to buy it.",
                            Name = "PlanningToBuy"
                        },
                        new
                        {
                            Id = new Guid("1ff62eb2-9814-4b70-9f2e-b5a6e9beab65"),
                            Description = "I bought it, I have it, I enjoy it.",
                            Name = "Bought"
                        },
                        new
                        {
                            Id = new Guid("e203ea86-6ae0-4ef5-92ab-38683561a634"),
                            Description = "I think I need it.",
                            Name = "ThinkingOfBuying"
                        },
                        new
                        {
                            Id = new Guid("a027a949-c993-4dce-bd78-87f3715bebb1"),
                            Description = "I do not need it, yet.",
                            Name = "RejectedIdea"
                        },
                        new
                        {
                            Id = new Guid("603dccb4-2f5d-42cd-aa9a-b859184d6d7b"),
                            Description = "I think I need it, but not now.",
                            Name = "PostponedLater"
                        });
                });

            modelBuilder.Entity("Wishlist.Service.API.Models.Entity", b =>
                {
                    b.HasOne("Wishlist.Service.API.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Wishlist.Service.API.Models.Occasion", "Occasion")
                        .WithMany()
                        .HasForeignKey("OccasionId");

                    b.HasOne("Wishlist.Service.API.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");
                });
#pragma warning restore 612, 618
        }
    }
}
