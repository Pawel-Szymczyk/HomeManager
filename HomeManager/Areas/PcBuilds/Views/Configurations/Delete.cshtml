@model HomeManager.Areas.PcBuilds.Models.Configuration

@section Banner {
    @*... contents of the banner specific to that view*@
    <div class="eightbit-header-pc-configuration eightbit-header ">
        <img class="website-header-img" src="~/lib/images/pc_configuration.png" alt="pc configuration" />
    </div>
}

@{
    ViewData["Title"] = "PC Configuration";
}

<article class="nes-container">
    <div class="actions-container">
        <div>
            <h1>Delete</h1>
        </div>
        <div class="actions-container-buttons">
            <form asp-action="Delete">
                <button type="submit" class="nes-btn is-error">Delete</button>
                <a class="nes-btn" asp-action="Index">Back to List</a>
            </form>
        </div>
    </div>
    <h3>Are you sure you want to delete this?</h3>
    <hr />
    <div class="actions-container">
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TotalPrice)
            </dt>
            <dd class="col-sm-10">
                <strong>@Html.DisplayFor(model => model.TotalPrice)</strong>
            </dd>
            <dt class="col-sm-2">
                PC Specification
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CPUWatercooler.Name)
            </dd>
            <dt class="col-sm-2"></dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Fan.Name)
            </dd>
            <dt class="col-sm-2"></dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.GraphicsCard.Name) (x @Html.DisplayFor(model => model.GraphicsCardQty))
            </dd>
            <dt class="col-sm-2"></dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Motherboard.Name)
            </dd>
            @foreach (var item in Model.pcBuildHardDrives)
            {
                <dt class="col-sm-2"></dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => item.hardDrive.Name)
                </dd>
            }
            @foreach (var item in Model.pcBuildOthers)
            {
                <dt class="col-sm-2"></dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => item.other.Name)
                </dd>
            }
            <dt class="col-sm-2"></dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PCCase.Name)
            </dd>
            <dt class="col-sm-2"></dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PowerSupply.Name)
            </dd>
            <dt class="col-sm-2"></dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Processor.Name)
            </dd>
            <dt class="col-sm-2"></dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RAM.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ModifiedDate)
            </dd>
        </dl>
        @if (Model.ImageData != null)
        {
            <div class="nes-container is-rounded image-box">
                <img src="data:image;base64,@System.Convert.ToBase64String(Model.ImageData)" class="product-image" />
            </div>
        }
    </div>
</article>