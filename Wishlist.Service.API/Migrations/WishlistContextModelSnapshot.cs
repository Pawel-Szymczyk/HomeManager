// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wishlist.Service.API.DBContext;

namespace Wishlist.Service.API.Migrations
{
    [DbContext(typeof(WishlistContext))]
    partial class WishlistContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wishlist.Service.API.Models.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OccasionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OccasionId");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("Wishlist.Service.API.Models.Occasion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Occasions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db6f100a-e46c-4dad-81a0-340765cc65e3"),
                            Description = "There is no occasion, but don't forget about yourself.",
                            Name = "NoOccasion"
                        },
                        new
                        {
                            Id = new Guid("e3ab66ee-6c04-471d-a0db-6e0c9917d3ef"),
                            Description = "Someone celebrates birthday, don't forget about a nice present.",
                            Name = "BirthdayPresent"
                        },
                        new
                        {
                            Id = new Guid("ef1f9b84-7e2a-4f16-be3e-62601a7f539f"),
                            Description = "Christmas time, there is no better time for presents.",
                            Name = "ChristmasPresent"
                        },
                        new
                        {
                            Id = new Guid("974247f9-d42a-4bb8-8602-3af75572eb83"),
                            Description = "Need more stuf, movement is great opportunity to rid of old things.",
                            Name = "Movement"
                        },
                        new
                        {
                            Id = new Guid("4e9b1fe5-627a-4a9f-bf2c-830cd074381d"),
                            Description = "Any other situation you didn't think of.",
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("Wishlist.Service.API.Models.Entity", b =>
                {
                    b.HasOne("Wishlist.Service.API.Models.Occasion", "Occasion")
                        .WithMany()
                        .HasForeignKey("OccasionId");
                });
#pragma warning restore 612, 618
        }
    }
}
